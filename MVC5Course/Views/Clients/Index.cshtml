@model IEnumerable<MVC5Course.Models.Client>
@{
    ViewBag.Title = "Index";
}
<h2>Index</h2>
<p>
    @Html.ActionLink("Create New", "Create")
</p>
@using (Html.BeginForm("Search", "Clients", FormMethod.Get, null))
{
    @Html.TextBox("keyword", null, new { placeholder = "請輸入關鍵字" })
    <input type="submit" />
}

@using (Html.BeginForm("BatchUpdate", "Clients"))
{
    @Html.TextBox("page.Keyword", "will")
    @Html.TextBox("page.PageNo", 10)
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.FirstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MiddleName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Gender)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DateOfBirth)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreditRating)
            </th>
            <th></th>
        </tr>

        @*@foreach (var item in Model)
            {
                @Html.HiddenFor(modelItem => item.ClientId)
                <tr>
                    <td>
                        @Html.EditorFor(modelItem => item.FirstName)
                        @Html.ValidationMessageFor(model => item.FirstName, "", new { @class = "text-danger" })
                    </td>
                    <td>
                        @Html.EditorFor(modelItem => item.MiddleName)
                        @Html.ValidationMessageFor(model => item.MiddleName, "", new { @class = "text-danger" })
                    </td>
                    <td>
                        @Html.EditorFor(modelItem => item.LastName)
                        @Html.ValidationMessageFor(model => item.LastName, "", new { @class = "text-danger" })
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Gender)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DateOfBirth)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CreditRating)
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id = item.ClientId }) |
                        @Html.ActionLink("Details", "Details", new { id = item.ClientId }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.ClientId })
                    </td>
                </tr>
            }*@


        @{
            var data = Model.ToArray();
        }

        @for (var i = 0; i < data.Length; i++)
        {
            @Html.HiddenFor(modelItem => data[i].ClientId)
            <tr>
                <td>
                    @Html.EditorFor(modelItem => data[i].FirstName)
                    @Html.ValidationMessageFor(model => data[i].FirstName, "", new { @class = "text-danger" })
                </td>
                <td>
                    @Html.EditorFor(modelItem => data[i].MiddleName)
                    @Html.ValidationMessageFor(model => data[i].MiddleName, "", new { @class = "text-danger" })
                </td>
                <td>
                    @Html.EditorFor(modelItem => data[i].LastName)
                    @Html.ValidationMessageFor(model => data[i].LastName, "", new { @class = "text-danger" })
                </td>
                <td>
                    @Html.DisplayFor(modelItem => data[i].Gender)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => data[i].DateOfBirth)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => data[i].CreditRating)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = data[i].ClientId }) |
                    @Html.ActionLink("Details", "Details", new { id = data[i].ClientId }) |
                    @Html.ActionLink("Delete", "Delete", new { id = data[i].ClientId })
                </td>
            </tr>
        }
    </table>
    <input type="submit" />
}